version: "3.5"

services:

  traefik:
    image: traefik:v1.6.6-alpine
    command:
      - --api
      - --docker
      - --docker.watch
      - --docker.constraints=tag==web
      - --entryPoints=Name:http Address::80 Compress::true
      - --defaultEntryPoints=http
      - --metrics
      - --metrics.prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/null:/traefik.toml:rw
      # - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "8080:8080"  # Traefik Frontend
      - "443:443"
    networks:
      - asyncy-frontend
      - asyncy-backend

  bootstrap:
    image: asyncy/platform-bootstrap
    depends_on:
      - postgres
    networks:
      - asyncy-backend
    environment:
      - POSTGRES=yes

  engine:
    image: asyncy/platform-engine
    hostname: engine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - application-volume:/asyncy
    ports:
      - "8084"
    environment:
      - logger_name=asyncy
      - logger_level=debug
    networks:
      - asyncy-backend

  graphql:
    image: asyncy/platform-graphql
    labels:
      - "traefik.tags=web"
      - "traefik.backend=graphql"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host: api.${DNS:-asyncy.net}; PathPrefix: /graphql, /graphiql, /_postgraphile"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin: *||Access-Control-Allow-Headers: Content-Type"
    environment:
      - ROOT_DATABASE_URL=postgres://postgres@postgres/postgres
      - DATABASE_URL=postgres://asyncy_authenticator:PLEASE_CHANGE_ME@postgres/postgres
    ports:
      - "5000"
    depends_on:
      - postgres
    networks:
      - asyncy-frontend
      - asyncy-backend

  metabase:
    image: metabase/metabase
    labels:
      - "traefik.tags=web"
      - "traefik.backend=metabase"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: metabase.${DNS:-asyncy.net}"
    ports:
      - "3000"
    environment:
      - MB_DB_FILE=/tmp/metabase.db
    volumes:
      - metabase-volume:/tmp
    networks:
      - asyncy-backend

  postgres:
    image: postgres:10.3-alpine
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - asyncy-backend


volumes:
  postgres-volume:
  prometheus-volume:
  metabase-volume:
  grafana-volume:

networks:
  asyncy-frontend:
    driver: bridge
  asyncy-backend:
    driver: bridge
