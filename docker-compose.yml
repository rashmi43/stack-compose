version: "3.5"

services:

  traefik:
    image: traefik:v1.5.1-alpine
    command:
      - --api
      - --docker
      - --docker.watch
      - --docker.constraints=tag==web
      - --entryPoints=Name:http Address::80 Compress::true
      - --defaultEntryPoints=http
      - --metrics
      - --metrics.prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/null:/traefik.toml:rw
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - asyncy-frontend
      - asyncy-backend

  git:
    image: asyncy/platform-git-server
    labels:
      - "traefik.tags=web"
      - "traefik.backend=git"
      - "traefik.port=8888"
      - "traefik.frontend.rule=Host: git.${DNS:-asyncy.net}"
    ports:
      - "8888"
    networks:
      - asyncy-frontend
      - asyncy-backend
    environment:
      STORY: /stories/app/release/alpha
    volumes:
      - application-volume:/asyncy

  bootstrap:
    image: asyncy/platform-bootstrap
    labels:
      - "traefik.tags=web"
      - "traefik.backend=bootstrap"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host: ${DNS:-asyncy.net}"
    environment:
      DNS: ${DNS:-asyncy.net}
    networks:
      - asyncy-backend
    ports:
      - "5000"
    networks:
      - asyncy-frontend
      - asyncy-backend
    volumes:
      - application-volume:/asyncy

  gateway:
    image: asyncy/platform-gateway
    labels:
      - "traefik.tags=web"
      - "traefik.backend=gateway"
      - "traefik.port=8888"
      - "traefik.frontend.rule=Host: ${DNS:-sandbox.asyncy.net}"
    ports:
      - "8888"
    networks:
      - asyncy-frontend
      - asyncy-backend
    volumes:
      - application-volume:/asyncy

  engine:
    image: asyncy/platform-engine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - application-volume:/asyncy
    ports:
      - "8888"
    environment:
      - logger_name=asyncy
      - logger_level=warning
    networks:
      - asyncy-backend

  prometheus:
    image: asyncy/platform-prometheus
    labels:
      - "traefik.tags=web"
      - "traefik.backend=prometheus"
      - "traefik.port=9090"
      - "traefik.frontend.rule=Host: prometheus.${DNS:-asyncy.net}"
    volumes:
      - prometheus-volume:/prometheus
    ports:
      - "9090"
    networks:
      - asyncy-backend

  grafana:
    image: asyncy/platform-grafana
    labels:
      - "traefik.tags=web"
      - "traefik.backend=grafana"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: grafana.${DNS:-asyncy.net}"
    ports:
      - "3000"
    depends_on:
      - bootstrap
    networks:
      - asyncy-backend

  logspout:
    image: gliderlabs/logspout:latest
    networks:
      - asyncy-logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOGDNA_INGESTION_KEY="6741911c805b4846916703bcc528fc6b"
      - SYSLOG_STRUCTURED_DATA="logdna@48950 tag=\"docker\""
      - SYSLOG_TAG="asyncy-alpha"
    command:
      syslog+tls://syslog-a.logdna.com:32443
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M

volumes:
  application-volume:

networks:
  asyncy-frontend:
    driver: bridge
  asyncy-backend:
    driver: bridge
  asyncy-logging:
    driver: bridge
