version: "3.5"

services:

  traefik:
    image: traefik:v1.5.1-alpine
    command:
      - --api
      - --docker
      - --docker.watch
      - --docker.constraints=tag==web
      - --entryPoints=Name:http Address::80 Compress::true
      - --defaultEntryPoints=http
      - --metrics
      - --metrics.prometheus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/null:/traefik.toml:rw
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - asyncy-frontend
      - asyncy-backend

  git:
    image: asyncy/platform-git-server
    labels:
      - "traefik.tags=web"
      - "traefik.backend=git"
      - "traefik.port=7005"
      - "traefik.frontend.rule=Host: git.${DNS:-asyncy.net}"
    ports:
      - "7005"
    networks:
      - asyncy-frontend
      - asyncy-backend
    volumes:
      - asyncy-volume:/asyncy

  bootstrap:
    image: asyncy/platform-bootstrap
    labels:
      - "traefik.tags=web"
      - "traefik.backend=bootstrap"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host: ${DNS:-asyncy.net}"
    environment:
      DNS: ${DNS:-asyncy.net}
    networks:
      - asyncy-backend
    ports:
      - "5000"
    networks:
      - asyncy-frontend
      - asyncy-backend
    volumes:
      - asyncy-volume:/asyncy

  gateway:
    image: asyncy/platform-gateway
    labels:
      - "traefik.tags=web"
      - "traefik.backend=gateway"
      - "traefik.port=8888"
      - "traefik.frontend.rule=Host: ${DNS:-asyncy.net}"
    ports:
      - "8888"
    networks:
      - asyncy-frontend
      - asyncy-backend
    volumes:
      - asyncy-volume:/asyncy

  engine:
    image: asyncy/platform-engine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - asyncy-volume:/asyncy
    depends_on:
      - fluentd
    environment:
      - logger_name=asyncy
      - logger_level=warning
      - logdna_key=ingestion_key
    networks:
      - asyncy-backend
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: asyncy.engine

  grafana:
    image: asyncy/platform-grafana
    labels:
      - "traefik.tags=web"
      - "traefik.backend=grafana"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: grafana.${DNS:-asyncy.net}"
    ports:
      - "3000"
    depends_on:
      - bootstrap
    environment:
      - GF_DATABASE_URL=postgres://${GRAFANA_DB_USER:-grafana}:${GRAFANA_DB_PASS:-grafana}@${GRAFANA_DB_HOST:-postgres}:${GRAFANA_DB_PORT:-5432}/${GRAFANA_DB_NAME:-grafana}
    networks:
      - asyncy-backend

  fluentd:
    image: asyncy/platform-fluentd
    networks:
      - asyncy-backend
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.3
    labels:
      - "traefik.tags=web"
      - "traefik.backend=elasticsearch"
      - "traefik.port=9200"
      - "traefik.frontend.rule=Host: elasticsearch.${DNS:-asyncy.net}"
    volumes:
      - elasticsearch-volume:/usr/share/elasticsearch/data
    ports:
      - "9200"
    networks:
      - asyncy-backend

  kibana:
    image: asyncy/platform-kibana
    labels:
      - "traefik.tags=web"
      - "traefik.backend=kibana"
      - "traefik.port=5601"
      - "traefik.frontend.rule=Host: kibana.${DNS:-asyncy.net}"
    ports:
      - "5601"
    networks:
      - asyncy-backend

  statsd:
    image: prom/statsd-exporter:v0.6.0
    command: -statsd.listen-udp=:8125 -statsd.listen-tcp=:8125
    ports:
      - "8125"
      - "9102"
    networks:
      - asyncy-backend

  prometheus:
    image: asyncy/platform-prometheus
    labels:
      - "traefik.tags=web"
      - "traefik.backend=prometheus"
      - "traefik.port=9090"
      - "traefik.frontend.rule=Host: prometheus.${DNS:-asyncy.net}"
    volumes:
      - prometheus-volume:/prometheus
    ports:
      - "9090"
    networks:
      - asyncy-backend

volumes:
  asyncy-volume:
  elasticsearch-volume:
  prometheus-volume:

networks:
  asyncy-frontend:
    driver: bridge
  asyncy-backend:
    driver: bridge
